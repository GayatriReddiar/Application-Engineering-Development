    /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Employee.Employee;
import Business.Organization.AgencyOrganization;
import Business.Organization.ChildOrganization;
import Business.Organization.HeadDoctorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.NGOAdminOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.PharmacyOrganization;
import Business.Organization.StudentCommunityOrganization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer,OrganizationDirectory organizationDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
    }
    
    public void populateOrganizationComboBox(){
        organizationJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationJComboBox.addItem(organization);
        }
    }
    
    public void populateOrganizationEmpComboBox(){
        organizationEmpJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationEmpJComboBox.addItem(organization);
        }
    }

    private void populateTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        
        model.setRowCount(0);
        
        for (Employee employee : organization.getEmployeeDirectory().getEmpList()){
            Object[] row = new Object[2];
            row[0] = employee.getEmpID();
            row[1] = employee.getEmpName();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        managerIdJTextField = new javax.swing.JTextField();
        managerNameJTextField = new javax.swing.JTextField();
        managerNameJButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setLayout(null);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(730, 270, 480, 92);

        addJButton.setBackground(new java.awt.Color(0, 0, 0));
        addJButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        addJButton.setForeground(new java.awt.Color(255, 255, 255));
        addJButton.setText("Create");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton);
        addJButton.setBounds(930, 610, 130, 40);

        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox);
        organizationJComboBox.setBounds(970, 210, 180, 30);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Organization:");
        add(jLabel1);
        jLabel1.setBounds(790, 210, 160, 30);

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(40, 40, 110, 40);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Name:");
        add(jLabel2);
        jLabel2.setBounds(800, 480, 120, 30);
        add(nameJTextField);
        nameJTextField.setBounds(980, 480, 180, 30);

        organizationEmpJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationEmpJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationEmpJComboBoxActionPerformed(evt);
            }
        });
        add(organizationEmpJComboBox);
        organizationEmpJComboBox.setBounds(980, 440, 180, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Organization:");
        add(jLabel3);
        jLabel3.setBounds(800, 430, 160, 40);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Manage Employee");
        add(jLabel4);
        jLabel4.setBounds(780, 40, 340, 50);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 153));
        jLabel5.setText("Create New Employee");
        add(jLabel5);
        jLabel5.setBounds(870, 390, 250, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Manager Id :");
        add(jLabel7);
        jLabel7.setBounds(800, 520, 136, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Manager Name :");
        add(jLabel8);
        jLabel8.setBounds(800, 560, 180, 30);

        managerIdJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(managerIdJTextField);
        managerIdJTextField.setBounds(980, 520, 180, 30);

        managerNameJTextField.setEditable(false);
        managerNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(managerNameJTextField);
        managerNameJTextField.setBounds(980, 560, 180, 30);

        managerNameJButton.setBackground(new java.awt.Color(0, 0, 0));
        managerNameJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        managerNameJButton.setForeground(new java.awt.Color(255, 255, 255));
        managerNameJButton.setText("Fetch Manager");
        managerNameJButton.setBorder(null);
        managerNameJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerNameJButtonActionPerformed(evt);
            }
        });
        add(managerNameJButton);
        managerNameJButton.setBounds(1180, 540, 130, 40);

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        add(deleteButton);
        deleteButton.setBounds(1220, 290, 100, 40);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/org2 - Copy.jpg"))); // NOI18N
        add(jLabel6);
        jLabel6.setBounds(0, 0, 1916, 1211);
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        int mgnrId; 
        if(managerIdJTextField.getText().equals("") ){
            mgnrId = 0;
            managerNameJTextField.setText("null");
        }        
        else
            mgnrId = Integer.parseInt(managerIdJTextField.getText());
        
        
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        String name = nameJTextField.getText();
        
        organization.getEmployeeDirectory().createEmp(name, mgnrId);
        populateTable(organization);
        
        nameJTextField.setText("");
        managerIdJTextField.setText("");
        managerNameJTextField.setText("");  
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null){
            populateTable(organization);
        }        
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void managerNameJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerNameJButtonActionPerformed
        Employee manager = new Employee();
        Employee hod = new Employee();
        int managerId= Integer.parseInt(managerIdJTextField.getText());
        
        for (Organization organization : organizationDir.getOrganizationList()){
            if(organization instanceof StudentCommunityOrganization){
                hod = organization.getEmployeeDirectory().getEmp(managerId);
                managerNameJTextField.setText(hod.getEmpName());
            }
            if(organization instanceof HeadDoctorOrganization){
                hod = organization.getEmployeeDirectory().getEmp(managerId);
                managerNameJTextField.setText(hod.getEmpName());
            }
        }

        //        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();

        // TODO add your handling code here:
    }//GEN-LAST:event_managerNameJButtonActionPerformed

          
    private void organizationEmpJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        
        if(organization instanceof LabOrganization || organization instanceof PharmacyOrganization || organization instanceof AgencyOrganization || organization instanceof HeadDoctorOrganization || organization instanceof ChildOrganization || organization instanceof NGOAdminOrganization || organization instanceof StudentCommunityOrganization){
            managerIdJTextField.setEnabled(false);
            managerNameJTextField.setEnabled(false);
        }
        else{
            managerIdJTextField.setEnabled(true);
            managerNameJTextField.setEnabled(true);
        } 
    }//GEN-LAST:event_organizationEmpJComboBoxActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = organizationJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select the row!!!");
            return;
        }
        
        Organization op = null;
        String empname = organizationJTable.getValueAt(selectedRow, 1).toString();

        for (Organization o : organizationDir.getOrganizationList()) {
            for (Employee employee : o.getEmployeeDirectory().getEmpList()) {
                
                if (employee.getEmpName() == empname) {
                    o.getEmployeeDirectory().deleteEmp(employee);
                    op = o;
                    break;
                }
            }
            
        }
        populateTable(op);

    }//GEN-LAST:event_deleteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField managerIdJTextField;
    private javax.swing.JButton managerNameJButton;
    private javax.swing.JTextField managerNameJTextField;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationEmpJComboBox;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
