/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AgencyRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.AgencyOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonationEventWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author reddy
 */
public class AgencyWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AgencyWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private UserAccount userAccount;
    private AgencyOrganization agencyOrganization;
    private Enterprise studentEnterprise;
    public AgencyWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem ecosystem, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecosystem = ecosystem;
        this.agencyOrganization = (AgencyOrganization)organization;
        this.studentEnterprise = enterprise;
        populateRequestsTable();
        populateApprovalsTable();
    }
    
    public void populateRequestsTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestTable.getModel();
        
        model.setRowCount(0);
        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if(organization instanceof AgencyOrganization){
                        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
                            if(request instanceof DonationEventWorkRequest){
                                DonationEventWorkRequest req = (DonationEventWorkRequest) request;                   
                                Object[] row = new Object[2];
                                row[0] = req;
                                row[1] = req.getNgoName();
                                model.addRow(row);    
                            }
                        }
                    }
                }
            }
        }
    }
    
    public void populateApprovalsTable(){
        DefaultTableModel model = (DefaultTableModel)registrationStatusJTable.getModel();        
        model.setRowCount(0);
        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if(organization instanceof AgencyOrganization){
                        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
                            if(request.getSender() == userAccount){
                                DonationEventWorkRequest req = (DonationEventWorkRequest) request;
                                Object[] row = new Object[4];
                                row[0] = req;
                                row[1] = req.getContactPerson();
                                row[2] = req.getNgoName();
                                row[3] = req.getStatus();    
                                model.addRow(row);
                            }
                        }
                    }
                }
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        registrationStatusJTable = new javax.swing.JTable();
        refreshNgoEventButton = new javax.swing.JButton();
        viewDetailsButton = new javax.swing.JButton();
        refreshEventRegistrationButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 45)); // NOI18N
        jLabel1.setText("Agency Grants Portal");
        add(jLabel1);
        jLabel1.setBounds(400, 110, 480, 53);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel3.setText("NGO Requests Table");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        add(jLabel3);
        jLabel3.setBounds(500, 220, 271, 30);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        workRequestTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        workRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "NGO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(390, 250, 452, 92);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel2.setText("Grant Approvals");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        add(jLabel2);
        jLabel2.setBounds(500, 440, 213, 40);

        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        registrationStatusJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        registrationStatusJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Name", "NGO", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(registrationStatusJTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(390, 480, 452, 92);

        refreshNgoEventButton.setBackground(new java.awt.Color(0, 0, 0));
        refreshNgoEventButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        refreshNgoEventButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshNgoEventButton.setText("Refresh");
        refreshNgoEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshNgoEventButtonActionPerformed(evt);
            }
        });
        add(refreshNgoEventButton);
        refreshNgoEventButton.setBounds(390, 350, 130, 40);

        viewDetailsButton.setBackground(new java.awt.Color(0, 0, 0));
        viewDetailsButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        viewDetailsButton.setForeground(new java.awt.Color(255, 255, 255));
        viewDetailsButton.setText("View Details");
        viewDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsButtonActionPerformed(evt);
            }
        });
        add(viewDetailsButton);
        viewDetailsButton.setBounds(670, 360, 150, 40);

        refreshEventRegistrationButton.setBackground(new java.awt.Color(0, 0, 0));
        refreshEventRegistrationButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        refreshEventRegistrationButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshEventRegistrationButton.setText("Refresh");
        refreshEventRegistrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshEventRegistrationButtonActionPerformed(evt);
            }
        });
        add(refreshEventRegistrationButton);
        refreshEventRegistrationButton.setBounds(560, 600, 130, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/donate - Copy.jpg"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(0, 0, 1912, 1075);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshNgoEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshNgoEventButtonActionPerformed
        populateRequestsTable();         // TODO add your handling code here:
    }//GEN-LAST:event_refreshNgoEventButtonActionPerformed

    private void viewDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsButtonActionPerformed
        int selectedRow = workRequestTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select row from table!!!");
            return;
        }

        DonationEventWorkRequest request = (DonationEventWorkRequest)workRequestTable.getValueAt(selectedRow, 0);
        DonationRegistrationJPanel donationRegistrationJPanel = new DonationRegistrationJPanel(userProcessContainer, request, userAccount, agencyOrganization, ecosystem);
        userProcessContainer.add("DonationRegistrationJPanel", donationRegistrationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewDetailsButtonActionPerformed

    private void refreshEventRegistrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshEventRegistrationButtonActionPerformed
        // TODO add your handling code here:
        populateApprovalsTable();
    }//GEN-LAST:event_refreshEventRegistrationButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshEventRegistrationButton;
    private javax.swing.JButton refreshNgoEventButton;
    private javax.swing.JTable registrationStatusJTable;
    private javax.swing.JButton viewDetailsButton;
    private javax.swing.JTable workRequestTable;
    // End of variables declaration//GEN-END:variables
}
