/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NGOAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.NGOAdminOrganization;
import Business.Organization.Organization;
import Business.Organization.StudentOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EducationEventWorkRequest;
import Business.WorkQueue.StudentApprovalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author reddy
 */
public class ManageEducationalWorkshopJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEducationalWorkshopJPanel
     */
    JPanel container;
    UserAccount account;
    NGOAdminOrganization organization;
    Enterprise enterprise;
    EcoSystem ecosystem;
    public ManageEducationalWorkshopJPanel(JPanel container, UserAccount account, NGOAdminOrganization organization, Enterprise enterprise, EcoSystem ecosystem) {
        initComponents();
        this.container = container;
        this.account = account;
        this.organization = organization;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)eduWorkshopTable.getModel();
        dtm.setRowCount(0);
        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    if(o instanceof StudentOrganization){
                        for(WorkRequest request : o.getWorkQueue().getWorkRequestList()){
                            if(request instanceof EducationEventWorkRequest){
                                EducationEventWorkRequest req = (EducationEventWorkRequest) request;
                                Object[] row = new Object[1];
                                row[0] = req;
                                dtm.addRow(row);
                            }
                        }
                    } 
                }
            }
        }                       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        createWorkshopButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        eduWorkshopTable = new javax.swing.JTable();
        cancelWorkshopButton = new javax.swing.JButton();
        viewWorkshopButton = new javax.swing.JButton();
        viewRegistrationsButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 45)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Educational Workshop");
        add(jLabel1);
        jLabel1.setBounds(230, 170, 620, 70);

        createWorkshopButton.setBackground(new java.awt.Color(0, 0, 0));
        createWorkshopButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        createWorkshopButton.setForeground(new java.awt.Color(255, 255, 255));
        createWorkshopButton.setText("Create Workshop");
        createWorkshopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createWorkshopButtonActionPerformed(evt);
            }
        });
        add(createWorkshopButton);
        createWorkshopButton.setBounds(410, 430, 230, 40);

        eduWorkshopTable.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        eduWorkshopTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Educational Workshops"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(eduWorkshopTable);
        if (eduWorkshopTable.getColumnModel().getColumnCount() > 0) {
            eduWorkshopTable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(300, 290, 452, 98);

        cancelWorkshopButton.setBackground(new java.awt.Color(0, 0, 0));
        cancelWorkshopButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        cancelWorkshopButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelWorkshopButton.setText("Cancel Workshop");
        cancelWorkshopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelWorkshopButtonActionPerformed(evt);
            }
        });
        add(cancelWorkshopButton);
        cancelWorkshopButton.setBounds(410, 610, 230, 40);

        viewWorkshopButton.setBackground(new java.awt.Color(0, 0, 0));
        viewWorkshopButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        viewWorkshopButton.setForeground(new java.awt.Color(255, 255, 255));
        viewWorkshopButton.setText("View Workshop Details");
        viewWorkshopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewWorkshopButtonActionPerformed(evt);
            }
        });
        add(viewWorkshopButton);
        viewWorkshopButton.setBounds(410, 490, 230, 40);

        viewRegistrationsButton.setBackground(new java.awt.Color(0, 0, 0));
        viewRegistrationsButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        viewRegistrationsButton.setForeground(new java.awt.Color(255, 255, 255));
        viewRegistrationsButton.setText("View Registrations");
        viewRegistrationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRegistrationsButtonActionPerformed(evt);
            }
        });
        add(viewRegistrationsButton);
        viewRegistrationsButton.setBounds(410, 550, 230, 40);

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton);
        backButton.setBounds(20, 90, 120, 40);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/international-childrens-day_136441_1280x553 - Copy.jpg"))); // NOI18N
        add(jLabel10);
        jLabel10.setBounds(0, 0, 1920, 829);
    }// </editor-fold>//GEN-END:initComponents

    private void createWorkshopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createWorkshopButtonActionPerformed
        // TODO add your handling code here:
        CreateEducationalWorkshopJPanel createEducationalWorkshopJPanel = new CreateEducationalWorkshopJPanel(container, account, enterprise, ecosystem);
        container.add("CreateEducationalWorkshopJPanel", createEducationalWorkshopJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_createWorkshopButtonActionPerformed

    private void viewWorkshopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewWorkshopButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = eduWorkshopTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select row from table");
            return;
        }
        EducationEventWorkRequest request = (EducationEventWorkRequest)eduWorkshopTable.getValueAt(selectedRow, 0);
        ViewEducationalWorkshopJPanel viewEducationalWorkshopJPanel = new ViewEducationalWorkshopJPanel(container, request, account, enterprise, ecosystem);
        container.add("ViewEducationalWorkshopJPanel", viewEducationalWorkshopJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_viewWorkshopButtonActionPerformed

    private void viewRegistrationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRegistrationsButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = eduWorkshopTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select row from table");
            return;
        }
        EducationEventWorkRequest request = (EducationEventWorkRequest)eduWorkshopTable.getValueAt(selectedRow, 0);
        RegisteredInstructorsJPanel registeredInstructorsJPanel = new RegisteredInstructorsJPanel(container, request, account, enterprise);
        container.add("RegisteredInstructorsJPanel", registeredInstructorsJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_viewRegistrationsButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backButtonActionPerformed

    private void cancelWorkshopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelWorkshopButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = eduWorkshopTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select row from table");
            return;
        }
        EducationEventWorkRequest request = (EducationEventWorkRequest)eduWorkshopTable.getValueAt(selectedRow, 0);
        Organization org = null;
        for(Network n : ecosystem.getNetworkList()){
                for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if (o instanceof StudentOrganization){
                            org = o;
                            break;
                        }
                    }
                }
            }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().remove(request);
            account.getQueue().getWorkRequestList().remove(request);
            for(Network network : ecosystem.getNetworkList()){
                for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                    for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                        for(WorkRequest req : organization.getWorkQueue().getWorkRequestList()){
                            if(req instanceof StudentApprovalWorkRequest){
                                StudentApprovalWorkRequest studentReq = (StudentApprovalWorkRequest) req;
                                if(studentReq.getEventRequest()== request){
                                    studentReq.setStatus("Event Cancelled");
                                }
                            }
                        }
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Education Workshop Event Cancelled. Student Clubs notified!");
        populateTable();
    }//GEN-LAST:event_cancelWorkshopButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelWorkshopButton;
    private javax.swing.JButton createWorkshopButton;
    private javax.swing.JTable eduWorkshopTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewRegistrationsButton;
    private javax.swing.JButton viewWorkshopButton;
    // End of variables declaration//GEN-END:variables
}
