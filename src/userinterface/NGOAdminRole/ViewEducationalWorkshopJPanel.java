/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NGOAdminRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EducationEventWorkRequest;
import Business.WorkQueue.StudentApprovalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author reddy
 */

public class ViewEducationalWorkshopJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EducationalWorkshopsJPanel
     */
    private JPanel container;
    private EducationEventWorkRequest request;
    private UserAccount account;
    private Enterprise enterprise;
    private EcoSystem ecosystem;
    public ViewEducationalWorkshopJPanel(JPanel container, EducationEventWorkRequest request, UserAccount account, Enterprise enterprise, EcoSystem ecosystem) {
        initComponents();
        this.container = container;
        this.request = request;
        this.account = account;
        this.enterprise = enterprise;
        this.ecosystem = ecosystem;
        ngoNameTextField.setText(request.getNgoName());
        eventNameTextField.setText(request.getEventName());
        instructorCountTextField.setText(request.getInstructorRequired());
        eventDateTextField.setText(request.getDate());
        locationTextField.setText(request.getPlace());
        eventDurationTextField.setText(request.getDuration());
        topicsTextField.setText(request.getTopic());
        confirmButton.setEnabled(false);
        updateButton.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        locationTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        eventDurationTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        topicsTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        instructorCountTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        viewInstructorsButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ngoNameTextField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        eventDateTextField = new com.github.lgooddatepicker.components.DatePicker();
        jLabel9 = new javax.swing.JLabel();

        setLayout(null);

        eventNameTextField.setEditable(false);
        add(eventNameTextField);
        eventNameTextField.setBounds(440, 300, 258, 30);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 45)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("View Educational Workshop");
        add(jLabel1);
        jLabel1.setBounds(160, 140, 550, 60);

        locationTextField.setEditable(false);
        add(locationTextField);
        locationTextField.setBounds(440, 420, 258, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Event Name:");
        add(jLabel2);
        jLabel2.setBounds(190, 300, 180, 30);

        eventDurationTextField.setEditable(false);
        add(eventDurationTextField);
        eventDurationTextField.setBounds(440, 460, 258, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("No of Instructors");
        add(jLabel3);
        jLabel3.setBounds(190, 340, 210, 30);

        topicsTextField.setEditable(false);
        add(topicsTextField);
        topicsTextField.setBounds(440, 500, 258, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Event Date:");
        add(jLabel4);
        jLabel4.setBounds(190, 380, 170, 30);

        instructorCountTextField.setEditable(false);
        add(instructorCountTextField);
        instructorCountTextField.setBounds(440, 340, 258, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Event Duration: (Hrs)");
        add(jLabel5);
        jLabel5.setBounds(190, 460, 250, 30);

        viewInstructorsButton.setText("View Instructors");
        viewInstructorsButton.setBackground(new java.awt.Color(0, 0, 0));
        viewInstructorsButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        viewInstructorsButton.setForeground(new java.awt.Color(255, 255, 255));
        viewInstructorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInstructorsButtonActionPerformed(evt);
            }
        });
        add(viewInstructorsButton);
        viewInstructorsButton.setBounds(360, 580, 180, 40);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Location:");
        add(jLabel6);
        jLabel6.setBounds(190, 420, 150, 30);

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton);
        backButton.setBounds(30, 30, 100, 40);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Topics:");
        add(jLabel7);
        jLabel7.setBounds(190, 500, 130, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 25)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("NGO Name:");
        add(jLabel8);
        jLabel8.setBounds(190, 260, 170, 30);

        ngoNameTextField.setEditable(false);
        add(ngoNameTextField);
        ngoNameTextField.setBounds(440, 260, 258, 30);

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        add(updateButton);
        updateButton.setBounds(250, 650, 180, 40);

        confirmButton.setBackground(new java.awt.Color(0, 0, 0));
        confirmButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        confirmButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        add(confirmButton);
        confirmButton.setBounds(470, 650, 180, 40);
        add(jLabel10);
        jLabel10.setBounds(0, 0, 0, 0);

        eventDateTextField.setEnabled(false);
        add(eventDateTextField);
        eventDateTextField.setBounds(440, 380, 290, 30);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/international-childrens-day_136441_1280x553 - Copy.jpg"))); // NOI18N
        add(jLabel9);
        jLabel9.setBounds(0, 0, 1920, 829);
    }// </editor-fold>//GEN-END:initComponents

    private void viewInstructorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInstructorsButtonActionPerformed
        // TODO add your handling code here:
        RegisteredInstructorsJPanel registeredInstructorsJPanel = new RegisteredInstructorsJPanel(container, request, account, enterprise);
        container.add("RegisteredInstructorsJPanel", registeredInstructorsJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_viewInstructorsButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        eventNameTextField.setEditable(true);
        instructorCountTextField.setEditable(true);
        eventDateTextField.setEnabled(true);
        locationTextField.setEditable(true);
        eventDurationTextField.setEditable(true);
        topicsTextField.setEditable(true);
        updateButton.setEnabled(false);
        confirmButton.setEnabled(true);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:
        if(eventNameTextField.getText().equals("") || instructorCountTextField.getText().equals("") || eventDateTextField.getText().equals("") || locationTextField.getText().equals("") || eventDurationTextField.getText().equals("")|| topicsTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(null,"One or more fields are empty");
                return;
        }
        
        if (!eventNameTextField.getText().matches("[A-Za-z]+$")) {

            JOptionPane.showMessageDialog(null, "Please enter a valid Event Name!!!");
            return;
        }
        
        if (!instructorCountTextField.getText().matches("[0-9]+$")) {

            JOptionPane.showMessageDialog(null, "Please enter a valid number for Instructor count!!!");
            return;
        }

        /*        
        if (!locationTextField.getText().matches("[a-zA-Z+]+[0-9+]+$")) {

            JOptionPane.showMessageDialog(null, "Please enter a valid Location!!!");
            return;
        }
        */
        if (!eventDurationTextField.getText().matches("[0-9]+$")) {

            JOptionPane.showMessageDialog(null, "Please enter a valid number of Hours!!!");
            return;
        }
        
        if (!topicsTextField.getText().matches("[A-Za-z]+$")) {

            JOptionPane.showMessageDialog(null, "Please enter a valid Topic!");
            return;
        }
        request.setEventName(eventNameTextField.getText());
        request.setInstructorRequired(instructorCountTextField.getText());
        request.setDate(eventDateTextField.getText());
        request.setPlace(locationTextField.getText());
        request.setDuration(eventDurationTextField.getText());
        request.setTopic(topicsTextField.getText());
        JOptionPane.showMessageDialog(null,"Educational workshop updated successfully");
        confirmButton.setEnabled(false);
        updateButton.setEnabled(true);
        eventNameTextField.setEditable(false);
        instructorCountTextField.setEditable(false);
        eventDateTextField.setEnabled(false);
        locationTextField.setEditable(false);
        eventDurationTextField.setEditable(false);
        topicsTextField.setEditable(false);
    }//GEN-LAST:event_confirmButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton confirmButton;
    private com.github.lgooddatepicker.components.DatePicker eventDateTextField;
    private javax.swing.JTextField eventDurationTextField;
    private javax.swing.JTextField eventNameTextField;
    private javax.swing.JTextField instructorCountTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JTextField ngoNameTextField;
    private javax.swing.JTextField topicsTextField;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton viewInstructorsButton;
    // End of variables declaration//GEN-END:variables
}
